{"version":3,"sources":["components/Calendar/DaysNumbered/DaysNumbered.module.scss","redux/actions.js","components/Calendar/BtnSwitch/BtnSwitch.js","components/Calendar/DaysEmptyCells/DaysEmptyCells.js","components/Calendar/DaysNumbered/DaysNumbered.js","components/Calendar/Month/Month.js","components/Calendar/Year/Year.js","components/Calendar/Calendar.js","components/App/App.js","redux/reducer.js","redux/store.js","index.js","components/Calendar/Calendar.module.scss"],"names":["module","exports","nextMonth","type","prevMonth","connect","dispatch","goNext","actions","goPrev","next","prev","children","onClick","state","cellsContainer","firstMonthDay","Date","year","month","getDay","emptyCells","i","push","empty","map","key","uniqid","daysAmount","day","getDate","number","item","className","monthNumber","monthsNames","Calendar","navWrapper","dateLabel","daysWrapper","App","date","initialState","getMonth","getFullYear","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85292245.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"DaysNumbered_day__2k3kG\"};","function nextMonth() {\n   return {\n      type: \"NEXT_MONTH\"\n   }\n}\n\nfunction prevMonth() {\n   return {\n      type: \"PREV_MONTH\"\n   }\n}\n\n\nexport default { nextMonth, prevMonth };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport actions from \"redux/actions\";\n\n\nfunction BtnSwitch({ goNext, goPrev, next, prev, children }) {\n   if (next) {\n      return (\n         <>\n            <button onClick={goNext}>\n               {children}\n            </button>\n         </>\n      );\n   } else if (prev) {\n      return (\n         <>\n            <button onClick={goPrev}>\n               {children}\n            </button>\n         </>\n      );\n   }\n\n}\n\n\nBtnSwitch.propTypes = {\n   goNext: PropTypes.func.isRequired,\n   goPrev: PropTypes.func.isRequired,\n   next: PropTypes.bool,\n   prev: PropTypes.bool,\n   children: PropTypes.node,\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n   return {\n      goNext: () => {\n         dispatch(actions.nextMonth())\n      },\n      goPrev: () => {\n         dispatch(actions.prevMonth())\n      }\n   }\n}\n\n\nexport default connect(null, mapDispatchToProps)(BtnSwitch);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport uniqid from \"uniqid\";\n\n\nfunction DaysEmptyCells({ empty }) {\n   return (\n      <>\n         {empty.map(() => (\n            <div key={uniqid()}></div>\n         ))}\n      </>\n   );\n}\n\n\nDaysEmptyCells.propTypes = {\n   empty: PropTypes.array\n};\n\n\n// find amount of empty cells before first day in month\nfunction mapStateToProps(state) {\n   const cellsContainer = [];\n\n   // find number of first day in month\n   let firstMonthDay = new Date(state.year, state.month, 1).getDay();\n\n   // if Sunday number is 0, switch it to 7\n   if (firstMonthDay === 0) {\n      firstMonthDay = 7;\n   }\n\n   // empty cells are equal first month day minus one\n   const emptyCells = firstMonthDay - 1;\n\n   // create array with empty cells in month\n   for (let i = 1; i <= emptyCells; i++) {\n      cellsContainer.push(false);\n   }\n   return { empty: cellsContainer }\n}\n\n\nexport default connect(mapStateToProps)(DaysEmptyCells);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport uniqid from \"uniqid\";\nimport { day } from \"./DaysNumbered.module.scss\";\n\n\nfunction DaysNumbered({ daysAmount }) {\n   return (\n      <>\n         {daysAmount.map((item) => (\n            <div\n               className={day}\n               key={uniqid()}>\n               {item.number}\n            </div>\n         ))}\n      </>\n   )\n}\n\n\nDaysNumbered.propTypes = {\n   daysAmount: PropTypes.array\n};\n\n\n// find amount of days in month\nfunction mapStateToProps(state) {\n   const cellsContainer = [];\n\n   // genetate amount of days\n   const daysAmount = new Date(state.day, state.month + 1, 0).getDate();\n\n   // create array with days numbers\n   for (let i = 1; i <= daysAmount; i++) {\n      cellsContainer.push({ number: i });\n   }\n   return { daysAmount: cellsContainer };\n}\n\n\nexport default connect(mapStateToProps)(DaysNumbered);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nfunction Month({ monthNumber, monthsNames }) {\n   return (\n      <div>\n         {monthsNames[monthNumber]}\n      </div>\n   );\n}\n\nMonth.propTypes = {\n   monthNumber: PropTypes.number.isRequired,\n   monthsNames: PropTypes.arrayOf(PropTypes.string,).isRequired\n}\n\n\nfunction mapStateToProps(state) {\n   return {\n      monthNumber: state.month,\n      monthsNames: state.monthsNames\n   }\n}\n\n\nexport default connect(mapStateToProps)(Month);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n\nfunction Year({year}) {\n   return (\n      <div>\n         {year}\n      </div>\n   );\n}\n\n\nfunction mapStateToProps(state) {\n   return {\n      year: state.year\n   }\n}\n\n\nYear.propTypes = {\n   year: PropTypes.number.isRequired\n}\n\n\nexport default connect(mapStateToProps)(Year);","import React from \"react\";\nimport BtnSwitch from \"components/Calendar/BtnSwitch/BtnSwitch\";\nimport DaysEmptyCells from \"components/Calendar/DaysEmptyCells/DaysEmptyCells\";\nimport DaysNumbered from \"components/Calendar/DaysNumbered/DaysNumbered\";\nimport Month from \"components/Calendar/Month/Month\";\nimport Year from \"components/Calendar/Year/Year\";\nimport {navWrapper, daysWrapper, dateLabel} from \"./Calendar.module.scss\";\n\n\nfunction Calendar() {\n\n   return (\n      <div className=\"container\">\n         <div className={navWrapper}>\n            <BtnSwitch next>\n               Next\n            </BtnSwitch>\n\n            <div className={dateLabel}>\n               <Year />\n               <Month />\n            </div>\n\n\n            <BtnSwitch prev>\n               Prev\n            </BtnSwitch>\n         </div>\n\n         <div className={daysWrapper}>\n            <DaysEmptyCells />\n            <DaysNumbered />\n         </div>\n      </div>\n   );\n}\n\n\nexport default Calendar;","import React from \"react\";\nimport \"components/App/App.module.scss\";\nimport Calendar from \"components/Calendar/Calendar.js\";\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\n\n\nfunction App() {\n   return (\n      <div>\n         <Calendar />\n      </div>\n   );\n}\n\nexport default App;","const date = new Date();\n\n\nconst initialState = {\n   day: date.getDate(),\n   month: date.getMonth(),\n   year: date.getFullYear(),\n   monthsNames: [\"styczeń\", \"luty\", \"marzec\", \"kwiecień\", \"maj\", \"czerwiec\", \"lipiec\", \"sierpień\", \"wrzesień\", \"październik\", \"listopad\", \"grudzień\"]\n};\n\n\nfunction reducer(state = initialState, action) {\n   switch (action.type) {\n   case \"NEXT_MONTH\":\n      if (state.month === 11) {\n         return {\n            ...state,\n            month: state.month = 0,\n            year: state.year + 1,\n         };\n      } else {\n         return {\n            ...state,\n            month: state.month + 1\n         };\n      }\n   case \"PREV_MONTH\":\n      if (state.month === 0) {\n         return {\n            ...state,\n            month: state.month = 11,\n            year: state.year - 1\n         };\n      } else {\n         return {\n            ...state,\n            month: state.month - 1\n         };\n      }\n   default:\n      return state;\n   }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from \"redux/reducer\";\n\nconst store = createStore(reducer);\n\n// const store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from \"react\";\nimport App from \"components/App/App\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\n\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"Calendar_navWrapper__37zqj\",\"daysWrapper\":\"Calendar_daysWrapper__11y2t\",\"dateLabel\":\"Calendar_dateLabel__2NDBw\"};"],"sourceRoot":""}